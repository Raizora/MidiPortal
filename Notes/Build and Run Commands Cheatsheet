# Build Commands

# Initial Setup
Build Rust library first:
cd rust && cargo build --release && cd ..

Configure and build with Ninja:
rm -rf build
cmake -B build -G Ninja
cmake --build build

# Quick Rebuild (when only C++ changed)
cmake --build build

# Debug Build option A:
rm -rf build
cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug
cmake --build build

# Debug Build option B:

rm -rf cmake-build-ninja
cmake -G Ninja -S . -B cmake-build-ninja -DCMAKE_BUILD_TYPE=Debug

cmake --build cmake-build-ninja

lldb ./cmake-build-ninja/standalone/MidiPortalStandalone

(lldb) run

# Release Build
rm -rf build
cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
cmake --build build

# Run Commands

# Run Standalone (Debug)
./build/standalone/MidiPortalStandalone

# Run Standalone (Release)
./build/standalone/MidiPortalStandalone_artefacts/Release/MidiPortalStandalone

# Run Plugin (Debug)
./build/plugin/AudioPlugin_artefacts/Debug/Standalone/MidiPortalPlugin.app/Contents/MacOS/MidiPortalPlugin

# Run Plugin (Release)
./build/plugin/AudioPlugin_artefacts/Release/Standalone/MidiPortalPlugin.app/Contents/MacOS/MidiPortalPlugin

# Quick Copy/ Paste Combo
rm -rf build
cmake -B build -G Ninja
cmake --build build
./build/standalone/MidiPortalStandalone